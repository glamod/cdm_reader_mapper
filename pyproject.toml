[build-system]
requires = ["flit_core >=3.9,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "cdm_reader_mapper"
description = "Common Data Model reader and mapper toolbox"
authors = [
  {name = "Ludwig Lierhammer", email = "ludwig.lierhammer@dwd.de"},
  {name = "Joseph Siddons", email = "joseph.siddons@noc.ac.uk"},
  {name = "Axel Andersson", email = "axel.andersson@dwd.de"},
  {name = "Tina Leiding", email = "tina.leiding@dwd.de"},
  {name = "Richard Cornes", email = "richard.cornes@noc.ac.uk"},
  {name = "Elizabeth Kent", email = "eck@noc.ac.uk"}
]
maintainers = [
  {name = "Ludwig Lierhammer", email = "ludwig.lierhammer@dwd.de"},
  {name = "Joseph Siddons", email = "joseph.siddons@noc.ac.uk"}
]
readme = {file = "README.rst", content-type = "text/x-rst"}
requires-python = ">=3.10"
license = {file = "LICENSE"}
keywords = ["cdm_reader_mapper"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: Apache Software License",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13"
]
dynamic = ["version"]
dependencies = [
  "bottleneck >=1.3.1",
  "dask[array] >=2024.8.1",
  "datashader >=0.15.0",
  "distributed >=2.0",
  "h5netcdf >= 1.3.0",
  "msgpack",
  "netcdf4",
  "numba >=0.60.0",
  "pandas>=2.2.0",
  "platformdirs >4.0.0",
  "pyarrow >=15.0.0",
  "python-slugify",
  "recordlinkage >= 0.15",
  "requests",
  "swifter >=1.3.2",
  "timezonefinder >6.5.0",
  "xarray >=2023.11.0,!=2024.10.0"
]

[project.optional-dependencies]
dev = [
  "black[jupyter] ==25.1.0",
  "blackdoc ==0.3.9",
  "codespell ==2.4.1",
  "coverage >=7.5.0",
  "coveralls >=4.0.1",
  "deptry ==0.23.0",
  "distributed >=2.0",
  "flake8 >=7.1.1",
  "flake8-rst-docstrings >=0.3.0",
  "flit >=3.9.0",
  "isort ==6.0.1",
  "notebook",
  "pip >=24.2.0",
  "pre-commit >=3.7",
  "pylint >=3.3.1",
  "pytest>=8.3.4",
  "pytest-cov>=6.0.0",
  "pytest-env>=1.1.5",
  "ruff >=0.7.0",
  "vulture ==2.14"
]
docs = [
  "ipykernel",
  "ipython >=8.5.0",
  "myst-nb >=1.2.0",
  "nbconvert >=7.16.4",
  "numpydoc >=1.8.0",
  "sphinx >=7.0.0",
  "sphinx-autodoc-typehints",
  "sphinx-copybutton",
  "sphinx-book-theme >=1.0"
]
all = ["cdm_reader_mapper[dev]", "cdm_reader_mapper[docs]"]

[project.urls]
"Homepage" = "https://cdm-reader-mapper.readthedocs.io"
"Source" = "https://github.com/glamod/cdm_reader_mapper"
"Changelog" = "https://cdm_reader_mapper.readthedocs.io/en/latest/history.html"
"Issue tracker" = "https://github.com/glamod/cdm_reader_mapper"

[tool]

[tool.black]
target-version = [
  "py310",
  "py311",
  "py312"
]

[tool.bumpversion]
commit = true
commit_args = "--no-verify"
tag = false
allow_dirty = false
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)(\\-(?P<release>[a-z]+)(\\.(?P<build>\\d+)))?"
serialize = [
  "{major}.{minor}.{patch}-{release}.{build}",
  "{major}.{minor}.{patch}"
]

[[tool.bumpversion.files]]
filename = "cdm_reader_mapper/__init__.py"
search = "__version__ = \"{current_version}\""
replace = "__version__ = \"{new_version}\""

[tool.bumpversion.parts.build]
independent = false

[tool.bumpversion.parts.release]
optional_value = "release"
values = [
  "dev",
  "release"
]

[tool.codespell]
ignore-words-list = "sentinal, vaid, SME, ASII, TRU"
skip = "cdm_reader_mapper/mdf_reader/codes/**/*.json, cdm_reader_mapper/mdf_reader/schemas/**/*.json, cdm_reader_mapper/cdm_mapper/codes/**/*.json, tests/results/*.csv"

[tool.coverage.run]
relative_files = true
omit = ["tests/*.py"]

[tool.deptry]
extend_exclude = ["docs"]
ignore_notebooks = true
pep621_dev_dependency_groups = ["all", "dev", "docs"]

[tool.deptry.package_module_name_map]
"scikit-learn" = "sklearn"
"pyyaml" = "yaml"

[tool.deptry.per_rule_ignores]
DEP001 = ["SBCK"]
DEP002 = ["bottleneck", "pyarrow"]
DEP004 = ["matplotlib", "pytest_socket"]

[tool.flit.sdist]
include = [
  "AUTHORS.rst",
  "CHANGES.rst",
  "CONTRIBUTING.rst",
  "LICENSE",
  "Makefile",
  "README.rst",
  "CI/requirements_ci.txt",
  "environment.yml",
  "docs/**/*.png",
  "docs/**/*.rst",
  "docs/**/*.txt",
  "docs/Makefile",
  "docs/conf.py",
  "docs/make.bat",
  "tests/**/*.py",
  "cdm_reader_mapper/**/*.json",
  "cdm_reader_mapper/**/*.py",
  "cdm_reader_mapper/**/*.txt",
  "cdm_reader_mapper/**/*.yml"
]
exclude = [
  "**/*.py[co]",
  "**/__pycache__",
  ".*",
  "docs/_*",
  "docs/modules.rst",
  "pylintrc"
]

[tool.isort]
profile = "black"
py_version = 312
append_only = true
add_imports = "from __future__ import annotations"

[tool.mypy]
python_version = 3.12
show_error_codes = true
warn_return_any = true
warn_unused_configs = true
plugins = ["numpy.typing.mypy_plugin"]

[[tool.mypy.overrides]]
module = [
  "boltons.*",
  "cftime.*",
  "jsonpickle.*",
  "numba.*",
  "pytest_socket.*",
  "SBCK.*",
  "scipy.*",
  "sklearn.*",
  "statsmodels.*",
  "yamale.*",
  "yaml.*"
]
ignore_missing_imports = true

[tool.pytest]
python_files = "test_*.py"
testpaths = ["./tests"]

[tool.ruff]
src = ["cdm_reader_mapper"]
line-length = 150
target-version = "py312"
exclude = [
  ".git",
  "build",
  ".eggs"
]
extend-include = [
  "*.ipynb" # Include notebooks
]

[tool.ruff.format]
line-ending = "auto"

[tool.ruff.lint]
extend-select = [
  "RUF022" # unsorted-dunder-all
]
ignore = [
  "D205", # blank-line-after-summary
  "D400", # ends-in-period
  "D401" # non-imperative-mood
]
preview = true
select = [
  "C90", # mccabe-complexity
  "D", # docstrings
  "E", # pycodestyle errors
  "F", # pyflakes
  "N802", # invalid-function-name
  "S", # bandit
  "W" # pycodestyle warnings
]

[tool.ruff.lint.flake8-bandit]
check-typed-exception = true

[tool.ruff.lint.flake8-import-conventions.aliases]
"matplotlib.pyplot" = "plt"
numpy = "np"
pandas = "pd"
scipy = "sp"
xarray = "xr"

[tool.ruff.lint.isort]
known-first-party = ["cdm_reader_mapper"]
case-sensitive = true
detect-same-package = false
lines-after-imports = 2
no-lines-before = ["future", "standard-library"]

[tool.ruff.lint.mccabe]
max-complexity = 15

[tool.ruff.lint.per-file-ignores]
"docs/*.py" = ["D100", "D101", "D102", "D103"]
"tests/**/*test*.py" = ["D100", "D101", "D102", "D103", "N802", "S101"]
"cdm_reader_mapper/**/__init__.py" = ["F401", "F403"]

[tool.ruff.lint.pycodestyle]
max-doc-length = 180

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.vulture]
exclude = []
ignore_decorators = ["@pytest.fixture"]
ignore_names = []
min_confidence = 90
paths = ["cdm_reader_mapper", "tests"]
sort_by_size = true

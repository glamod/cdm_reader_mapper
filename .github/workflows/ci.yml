name: cdm Testing Suite
on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: read

jobs:
  test:
    name: py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        # Bookend python versions
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags.
      - name: Set environment variables
        run: |
          echo "CONDA_ENV_FILE=ci/requirements/environment.yml" >> $GITHUB_ENV
          echo "PYTHON_VERSION=${{ matrix.python-version }}" >> $GITHUB_ENV

      - name: Create conda environment
        uses: mamba-org/setup-micromamba@0dea6379afdaffa5d528b3d1dabc45da37f443fc # v2.0.4
        with:
          cache-downloads: true
          cache-downloads-key: "${{runner.os}}-${{runner.arch}}-py${{matrix.python-version}}-${{hashFiles(env.CONDA_ENV_FILE)}}"
          environment-file: ci/requirements/environment.yml
          create-args: >-
            python=${{ matrix.python-version }}

      - name: Install cdm reader mapper toolbox
        run: |
          python -m pip install --no-deps -e .

      - name: Version info
        run: |
          conda info -a
          conda list

      - name: Import cdm reader mapper toolbox
        run: |
          python -c "import cdm_reader_mapper"

      - name: Run tests
        timeout-minutes: 10
        run: python -u -m pytest
          --cov=cdm_reader_mapper
          --cov-report=xml
          --junitxml=test-results/${{ runner.os }}-${{ matrix.python-version }}.xml

      - name: Upload code coverage to Codecov
        uses: codecov/codecov-action@0da7aa657d958d32c117fc47e1f977e7524753c7 # v5.3.0
        with:
          files: ./coverage.xml
          flags: unittests
          env_vars: RUNNER_OS,PYTHON_VERSION
          name: codecov-umbrella
          fail_ci_if_error: false

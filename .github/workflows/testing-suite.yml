name: cdm_reader_mapper Testing Suite
on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: read

jobs:
  test:
    name: py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        # Bookend python versions
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags.
      - name: Set environment variables
        run: |
          echo "UV_ENV_FILE=pyproject.toml" >> $GITHUB_ENV
          echo "PYTHON_VERSION=${{ matrix.python-version }}" >> $GITHUB_ENV
          echo "UV_CACHE_DIR=/tmp/.uv-cache" >> $GITHUB_ENV

      - name: Install uv
        uses: astral-sh/setup-uv@3259c6206f993105e3a61b142c2d97bf4b9ef83d # v7.1.0
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true
          cache-local-path: ${{ env.UV_CACHE_DIR }}

      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: ${{ env.UV_CACHE_DIR }}
          key: uv-${{ runner.os }}-${{runner.arch}}-py${{matrix.python-version}}-${{ hashFiles(env.UV_ENV_FILE) }}
          restore-keys: |
            uv-${{ runner.os }}-${{runner.arch}}-py${{matrix.python-version}}-${{ hashFiles(env.UV_ENV_FILE) }}
            uv-${{ runner.os }}-${{runner.arch}}-py${{matrix.python-version}}

      - name: Install cdm reader mapper toolbox
        run: |
          uv sync --extra dev

      - name: Version info
        run: |
          uv version
          uv pip list

      - name: Import cdm_reader_mapper toolbox
        run: |
          uv run python -c "import cdm_reader_mapper"

      - name: Run tests
        timeout-minutes: 10
        run: uv run pytest tests
          --cov=cdm_reader_mapper
          --cov-report=xml
          --junitxml=test-results/${{ runner.os }}-${{ matrix.python-version }}.xml

      - name: Upload code coverage to Codecov
        if: github.ref == 'refs/heads/main'
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        with:
          files: ./coverage.xml
          flags: unittests
          env_vars: RUNNER_OS,PYTHON_VERSION
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Minimise uv cache
        run: uv cache prune --ci
